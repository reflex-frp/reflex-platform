#!/usr/bin/env bash
set -eu
set -o pipefail

readonly DIR="$(cd $(dirname ${BASH_SOURCE[0]}) && pwd)"
source "$DIR/common-setup.sh"

displayUsage() {
        cat <<EOF
Usage: $0 PLATFORM PACKAGE ...

    PLATFORM can be either "ghc" or "ghcjs"
    PACKAGE can be any cabal package name or a path (including at
    least one '/' character) to a nix expression representing a cabal
    package
    Any extra arguments will be passed along to nix-shell

This script will drop you into a nix shell with access to the
prerequisites of the chosen package on the chosen platform.  From
there, you should be able to 'cabal configure [--ghcjs]',
'cabal build,' and 'cabal test.' Note that 'cabal install' will not
interoperate with Nix packages, and may not work at all.
EOF

}

checkArgs() {
    if [[ "$#" -lt 2 ]]; then
        displayUsage "$@"
        exit 1
    fi
}

getInvocation() {
    local platform="$1"
    local package="$2"

    # if grep -q / "$package"; then
    if echo "$package" | grep -q /; then
        echo "(this.$platform.callPackage $package {})"
    else
        echo "this.$platform.$package"
    fi
}

runShell() {
    local expr="let this = import $DIR/. {}; in this.workOn $(getInvocation $@)"
    shift 2

    nix-shell $NIXOPTS -E "$expr" "$@"
}

main() {
    checkArgs "$@"
    runShell "$@"
}

main "$@"
