#!/usr/bin/env bash
set -eu
set -o pipefail

readonly DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
source "$DIR/common-setup.sh"

REPO="$1"
REV=
SOURCE_URL=
REMOTE_URL=
FIXED_REMOTE_URL=

checkRepo() {
    if [[ ! -d "$REPO" ]] ; then
        echo "Error: no such directory: $REPO"
        exit 1
    fi
}

checkStatus() {
    local diff=$(git -C "$REPO/.." diff HEAD -- "$REPO")
    local diff_exit=$?
    local status=$(git -C "$REPO/.." status --porcelain --ignored "$REPO")
    local status_exit=$?

    if [[ "$diff_exit" -ne 0 || "$status_exit" -ne 0 ]] ; then
        >&2 echo "Error: could not determine whether $REPO contains unsaved modifications"
        exit 1
    elif [[ -n "$diff" || -n "$status" ]] ; then
        >&2 echo "$diff"
        >&2 echo "$status"
        >&2 echo "Error: $REPO contains unsaved modifications"
        exit 1
    fi
}

setSourceUrl() {
    SOURCE_URL="$(eval "echo $(nix-instantiate $NIXOPTS --eval -E "(import $REPO/git.nix).url")")"
}

getRev() {
    REV="$(eval "echo $(nix-instantiate $NIXOPTS --eval -E "(import $REPO/git.nix).rev")")"
}

displayMessage() {
    echo "Checking out $SOURCE_URL at revision $REV..."
}

cleanUp() {
    rm "$REPO/default.nix"
    rm "$REPO/git.nix"
    rmdir "$REPO"
}

cloneRepo() {
    git clone -n "$SOURCE_URL" "$REPO"
}

setRemoteUrls() {
    REMOTE_URL="$(git -C "$REPO" config --get remote.origin.url)"
    FIXED_REMOTE_URL="$(echo "$REMOTE_URL" | sed 's_^git://github.com/_git@github.com:_')"
}

setRemote() {
    if [[ "$REMOTE_URL" != "$FIXED_REMOTE_URL" ]] ; then
        echo "Changing remote URL from $REMOTE_URL to $FIXED_REMOTE_URL"
        git -C "$REPO" remote set-url origin "$FIXED_REMOTE_URL"
    fi
}

checkoutRev() {
    git -C "$REPO" checkout "$REV"
}

displayWelcome() {
    echo "\nThe following remote branches contain this commit:"
    git -C "$REPO" branch -r --contains HEAD | sed -n s_origin/__p
    echo "You should probably 'git checkout' one of them to get started. Happy hacking!"
}

main() {
    checkRepo
    checkStatus
    setSourceUrl
    getRev
    displayMessage
    cleanUp
    cloneRepo
    setRemoteUrls
    setRemote
    checkoutRev
    displayWelcome
}

main "$@"
