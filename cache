#!/usr/bin/env bash
set -eu
set -o pipefail

readonly DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
source "$DIR/common-setup.sh"

SYSTEM=

displayUsage() {
    cat <<EOF
$(basename $0:) [-s SYSTEM] HOST
EOF
}

checkArgs() {
    if [[ $# -lt 1 ]]; then
        displayUsage $@
        exit 1
    fi
}

copyClosure() {
    local systems=
    local hosts=$@

    local expr='let this = (import ./. {}); in this.nixpkgs.stdenv.lib.concatStringsSep " " this.cacheTargetSystems'

    if [[ -z "$SYSTEM" ]]; then
        systems=$(eval "echo $(nix-instantiate $NIXOPTS --eval --read-write-mode -E "$expr")")
    else
        systems=$SYSTEM
    fi

    for host in $hosts; do
        for system in $systems; do
            nix-copy-closure \
                --gzip --to "$host" \
                --include-outputs \
                $(nix-build \
                      $NIXOPTS -Q --no-out-link --indirect \
                      --add-root "$PWD/gc-roots/cache-${system}.drv" \
                      -E "import ./shell.nix { system = \"$system\"; }")
        done
    done
}

main() {
    checkArgs "$@"

    while getopts ":s:" opt; do
        case $opt in
            s) SYSTEM=${OPTARG} ;;
            *) return 1 ;;
        esac
    done

    shift $((OPTIND-1))

    copyClosure "$@"
}

main "$@"
